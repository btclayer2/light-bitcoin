[package]
name = "light-bitcoin-mast"
version = "0.2.0"
authors = ['The ChainX Authors']
edition = "2021"
license = "GPL-3.0"

[dependencies]
arrayref = { version = "0.3.6", default-features = false }
codec = { package = "parity-scale-codec", version = "3.6.5", default-features = false, features = ["derive"] }
core2 = { version = "0.4.0", default-features = false, features = ["alloc"] }
digest = { version = "0.9.0", default-features = false }
rayon = { version = "1.5.0", optional = true }
rand_core = { version = "0.6.3", default-features = false }
scale-info = { version = "2.10.0", default-features = false, features = ["derive"] }
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
sha2 = { version = "0.9.5", default-features = false }
hex = { version = "0.4.3", default-features = false }
bitcoin_hashes = { version = "0.10.0", default-features = false, features = ["alloc"] }

bitcoin-bech32 = { git = "https://github.com/chainx-org/rust-bech32-bitcoin", branch = "master", default-features = false }

libsecp256k1 = { git = "https://github.com/chainx-org/libsecp256k1", branch = "develop-2022", default-features = false, features = ["hmac", "static-context"] }

light-bitcoin-crypto = { path = "../crypto", default-features = false }
light-bitcoin-keys = { path = "../keys", default-features = false }
light-bitcoin-script = { path = "../script", default-features = false }
light-bitcoin-serialization = { path = "../serialization", default-features = false }
lazy_static = { version = "1.4.0", default-features = false, features = ["spin_no_std"] }

[dev-dependencies]
criterion = { version = "0.3", default-features = false, features = ['html_reports', 'cargo_bench_support'] }

[features]
default = ['std']
std = [
    "rayon",
    "core2/std",
    "codec/std",
    "digest/std",
    "rand_core/std",
    "serde/std",
    "sha2/std",
    "hex/std",
    "bitcoin_hashes/std",
    "libsecp256k1/std",
    "light-bitcoin-crypto/std",
    "light-bitcoin-keys/std",
    "light-bitcoin-script/std",
    "light-bitcoin-serialization/std",
]
getrandom = ['rand_core/getrandom']

[[bench]]
name = "generate_address"
path = "benches/generate_address.rs"
harness = false
